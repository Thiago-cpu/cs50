"use client";

import Head from "next/head";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { useMazeStore } from "@/stores/useMaze";
import { Button } from "@/components/ui/button";
import { type Cell } from "../../lib/maze";

export default function Maze() {
  const { maze, newMaze, searchType, setSearchType } = useMazeStore();
  return (
    <>
      <Head>
        <title>CS50</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-[#0f1012]">
        <div className="flex flex-col gap-6">
          <div className="flex justify-between gap-4">
            <Button variant="outline" onClick={newMaze}>
              New Maze
            </Button>
            <Select value={searchType} onValueChange={(v) => setSearchType(v)}>
              <SelectTrigger className="w-[180px]">
                <SelectValue placeholder="Select search type" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="dfs">Depth First Search (DFS)</SelectItem>
                <SelectItem value="bfs">Breadth First Search (BFS)</SelectItem>
              </SelectContent>
            </Select>
            <Button variant="outline">Solve!</Button>
          </div>
          <div className="grid grid-cols-[repeat(32,1fr)]">
            {maze.board.map((row) =>
              row.map((cell) => (
                <CellComponent
                  key={`${cell.cords.x}-${cell.cords.y}`}
                  cell={cell}
                />
              )),
            )}
          </div>
        </div>
      </main>
    </>
  );
}

function CellComponent({ cell }: { cell: Cell }) {
  const moveToBorder = {
    up: "border-t-0",
    down: "border-b-0",
    right: "border-r-0",
    left: "border-l-0",
  };
  const border = cell.canMove.map((move) => moveToBorder[move]).join(" ");

  const typeToBg = {
    normal: "bg-[#03102d]",
    entry: "bg-[#912e1b]",
    exit: "bg-[#38af76]",
  };

  const background = typeToBg[cell.type];
  return (
    <div
      className={`h-6 w-6 border border-[#01020c] ${background} ${border}`}
    ></div>
  );
}
